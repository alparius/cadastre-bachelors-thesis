#   _              _                       _
#  | |            | |                     | |
#  | | __   __ _  | |_    __ _   ___ ____ | |_    ___   _ __
#  | |/ /  / _` | | __|  / _` | / __|_  / | __|  / _ \ | '__|
#  |   <  | (_| | | |_  | (_| | \__ \/ /  | |_  |  __/ | |
#  |_|\_\  \__,_|  \__|  \__,_| |___/___|  \__|  \___| |_|

image: alparius/go-kataszter:1.12.7

# cache go modules (=dependencies) between jobs and pipelines
cache:
    paths:
        - .cache

# setting GOPATH to cache dir 'hack', bc deps are under GOPATH, but cache must be under $CI_PROJECT_DIR
# only way to make gitlab-ci cacheing work for now, going to be fixed in golang:1.13.0
before_script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"

stages:
    - prepare
    - test
    - build
    - release

#   _   _           _
#  | | (_)         | |
#  | |  _   _ __   | |_
#  | | | | | '_ \  | __|
#  | | | | | | | | | |_
#  |_| |_| |_| |_|  \__|

lint:
    stage: prepare
    before_script: []
    script:
        - golangci-lint run --deadline=2m

#   _                  _
#  | |                | |
#  | |_    ___   ___  | |_
#  | __|  / _ \ / __| | __|
#  | |_  |  __/ \__ \ | |_
#   \__|  \___| |___/  \__|

test:
    stage: test
    script:
        - chmod +x test.sh
        - ./test.sh
        - go tool cover -html=coverage.txt -o ./coverage.html
    artifacts:
        paths:
            - ./coverage.html
        expire_in: 1 day

#   _               _   _       _
#  | |             (_) | |     | |
#  | |__    _   _   _  | |   __| |
#  | '_ \  | | | | | | | |  / _` |
#  | |_) | | |_| | | | | | | (_| |
#  |_.__/   \__,_| |_| |_|  \__,_|

build:
    stage: build
    script:
        - mkdir builds
        - go build -a -o ./builds/kataszter-backend_linux
        - GOOS=darwin GOARCH=amd64 go build -a -o ./builds/kataszter-backend_osx
        - GOOS=windows GOARCH=amd64 go build -a -o ./builds/kataszter-backend_windows-x64.exe
        - GOOS=windows GOARCH=386 go build -a -o ./builds/kataszter-backend_windows-x86.exe
    artifacts:
        paths:
            - ./builds
        expire_in: 1 day

#                _
#               | |
#  _ __    ___  | |   ___    __ _   ___    ___
# | '__|  / _ \ | |  / _ \  / _` | / __|  / _ \
# | |    |  __/ | | |  __/ | (_| | \__ \ |  __/
# |_|     \___| |_|  \___|  \__,_| |___/  \___|

.create_image_common: &create_image_common
    stage: release
    image:
        name: "gcr.io/kaniko-project/executor:debug-v1.3.0"
        entrypoint: [""]
    interruptible: false
    retry:
        max: 2
        when: runner_system_failure
    dependencies:
        - build
    before_script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    script:
        - >
            /kaniko/executor
            --context=${CI_PROJECT_DIR}
            --dockerfile=${CI_PROJECT_DIR}/Dockerfile
            --cache=true
            --cache-repo=${CI_REGISTRY_IMAGE}/cache
            --destination=${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
            --destination=${CI_REGISTRY_IMAGE}:latest

create_image_manual:
    <<: *create_image_common
    when: manual
    except:
        - tags

create_image:
    <<: *create_image_common
    only:
        - tags
